@model X.PagedList.IPagedList<Ecommerce.Data.HangHoa>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "NhanVienOnly";
    Layout = "~/Views/Shared/_LayoutAdminHangHoas.cshtml";
}

<form asp-action="Search" asp-controller="HangHoas" method="get">
    <div class="form-group">
        <label for="searchString">Search by Product Name:</label>
        <input type="text" id="searchString" name="searchString" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>


@await Component.InvokeAsync("Top5SellingProducts")

@await Component.InvokeAsync("LeastSellingProducts")

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>Tên Hàng Hóa</th>
            <th>Mô Tả</th>
            <th>Đơn Giá</th>
            <th>Hình</th>
            <th>Ngày Nhập</th>
            <th>Giảm Giá</th>
            <th>SoLanXem</th>
            <th>SoLuotMua</th>
            <th>MoTa</th>
            <th>MaLoai</th>
            <th>MaNcc</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.TenHh)</td>
                <td>@Html.DisplayFor(modelItem => item.MoTaDonVi)</td>
                <td>@Html.DisplayFor(modelItem => item.DonGia)</td>
                <td>
                    <img src="~/Hinh/HangHoa/@item.Hinh" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="@item.Hinh">
                </td>
                <td>@Html.DisplayFor(modelItem => item.NgaySx)</td>
                <td>@Html.DisplayFor(modelItem => item.GiamGia)</td>
                <td>@Html.DisplayFor(modelItem => item.SoLanXem)</td>
                <td>@Html.DisplayFor(modelItem => item.SoLuotMua)</td>
                <td>@Html.Raw(item.MoTa.Length > 100 ? item.MoTa.Substring(0, 30) + "..." : item.MoTa)</td>
                <td>@Html.DisplayFor(modelItem => item.MaLoaiNavigation.MaLoai)</td>
                <td>@Html.DisplayFor(modelItem => item.MaNccNavigation.MaNcc)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.MaHh">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.MaHh">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.MaHh">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Hiển thị phân trang -->
@{
    var pagedListRenderOptions = new PagedListRenderOptions
            {
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link", "rounded" },
                ActiveLiElementClass = "active",
                PreviousElementClass = "page-item",
                NextElementClass = "page-item",

            };

    <div class="col-12">
        <div class="pagination d-flex justify-content-center mt-5">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), pagedListRenderOptions)
        </div>
    </div>

}